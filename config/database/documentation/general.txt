General Database Structure (Non Relational - MongoDB => Mongoose (ODM)):

    User {
        _id (String, Incremental),
        username (String, Max 20 Chars),
        email (String),
        passwordSalt (10 Rounds),
        isAdmin (Boolean),
        verificationState (Boolean),
        creationDate (Date),
        IP (String),
    }

    Banned Accounts {
        _id (Unique, Incremental),
        userId (String, Relation => User._id),
        username (Relation => User.username),
        banDate (Date),
        banExpire (Date),
        isPermanent (Boolean, Default: False)
    }

    Banned IPs {
        _id (Unique, Incremental),
        IP (String, Relation => User.IP),
        banDate (Date),
        banExpire (Date),
        isPermanent (Boolean, Default: False)
    }

    Settings {
        _id (Unique, Incremental),
        userId (String, Relation => User._id)
        username (String, Relation => User.username),
        --various settings to be defined (To take alongside browser cookies, not as a total replacement) 
    }

    ChatRoom {
        _id (Unique, Incremental),
        name (String),
        isPublic (Boolean, Default: False),
        partecipantsUsernames [] (Strings, Relation => User.username), 
        partecipantsIDs [] (Strings, Relation => User._id),
        founder (String, Relation => User._id && User.username), 
        owner (String, Relation => User._id && User.username),
        admins [] (Strings, Relation => User._id && User.username),
        creationDate (Date),
        --various settings to be defined
    }

    Channel {
        _id (Unique, Incremental),
        chatRoomId (String, Relation => chatRoom._id)
        name (String),
        forAdmin (Boolean, Default: False),
        creationDate (Date),
        --various settings to be defined
    }

    Messages //(Principal Payload) {
        _id (Unique, Incremental),
        sender (String, Relation => User._id),
        toChatRoom (Boolean)
            True: Recipient = Channel _id
            False: Recipient = User _id
        content (String || Media),
        emitDate (Date),
    }

    Verification {
        _id (Unique, Incremental), 
        forUser (String, Relation => User._id),
        OtpSalt (String, Unique, 10 Rounds),
        requestDate (Date),
        requestExpiration (Date)
    }
    
    Invitation {
        _id (Unique, Incremental),
        chatRoom (String, Relation => chatRoom._id),
        creator (String, Relation => User._id),
        recipient (String, Relation => User._id),
        accepted (Boolean, Default: False),
        creationDate (Date),
        expirationDate (Date),
        originalMaxAge (Date, Hours)
        }


Available API routes:
    Authentication: ...
