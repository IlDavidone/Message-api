<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <title>Message App</title>
    <link rel="stylesheet" href="css/index.css">
  </head>
  <body>
    <div class="messages-body">
      <div class="message-wrapper">
        <div class="profile-message-wrapper">
          <div class="profile-picture-placeholder"></div>
        </div>
        <div class="message-content">
          <h4 class="profile-username">Yo</h4>
          <p class="message">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus iaculis pharetra sollicitudin. Etiam a sem ut dui dignissim pretium. Nunc lacinia ante nec auctor egestas. Cras ullamcorper lorem in orci egestas, condimentum efficitur orci pharetra. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In non quam nunc. Morbi magna nisi, ullamcorper at pellentesque vel, porttitor vel massa. Nam non porta urna, sed vehicula nulla. Nam leo metus, aliquet nec massa quis, dignissim tempus arcu. Praesent nec aliquam urna. Proin mollis ornare feugiat. Integer euismod tincidunt sagittis. Fusce et turpis quam. Donec et dolor ornare, dapibus augue non, tempor massa. Nam semper mauris quis tortor bibendum, id ultrices magna molestie.</p>
        </div>
      </div>
    </div>
    <form id="form" action="">
      <input id="input" autocomplete="off" /><button class="send">Send</button>
    </form>

    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js"></script>
    <script>
      const username = "<%= username %>"

      const socket = io();

      const form = document.querySelector("form");
      const input = document.querySelector("input");
      const messages = document.querySelector(".messages");
      const send = document.querySelector(".send");

      form.addEventListener("submit", (event) => {
        event.preventDefault();
        if (input.value) {
          socket.emit("message", username, input.value);
          input.value = "";
        }
      });

      socket.on("message", (uname, message) => {
        const item = document.createElement("li");
        item.textContent = uname + ": " + message;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });
    </script>
  </body>
</html>
